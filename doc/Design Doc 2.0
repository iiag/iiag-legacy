core features

ID Maps (for different types: item, creature, etc.)
Diffculty based generation
Dynamic world generation (buildings, overworld, etc.)
Dynamic creature generation
Dynamic Item generation
Item crafting system
Spell crafting system
(skill exp/leveling)
Effect on persistants
Extensive hook system (on items/creatures/tiles)
Tile objects (1 per tile)
Limbic system (creatures have limbs, can add/remove)
Creature Factions
 - faction disposition
 - creature disposition
Modular Display
Multiplayer
 - Display back end for server
 - Thin client with output/input
Dialogue
Quests/Campaigns
Containers (item holding items)
Plants/fungi as tile entities
Corpses drop and stuff
AI (neural network)
Genetics (creatures breed to creature more creatures)
Taming
Event system (timing)


------------------------------

struct Game
struct World
struct Zone
struct Tile ?

struct Persistant
struct Item
struct Creature
struct TileEntity ?

struct ItemImp
struct CreatureImp

struct ItemGenerator
struct CreatureGenerator

struct Effect
struct EffectImp ?

struct action ???

struct Game {

	bool multiplayer;
	vector? Worlds;

	master faction table?
	
}

struct World{

	ZoneGenerator;
	ItemGeneratorGenerator;
	CreatureGeneratorGenerator;

	DATA_STRUCTURE Zones!

}

struct Zone{

	DATA_STRUCTURE tiles;
	
	ItemGenerator
	CreatureGenerator

	MAP( uuid->Persistant ) things;
	int zoneID;
	
}

struct Persistant{

	int(long long?) uuid;
	bool alive;
	int type;
	
}
